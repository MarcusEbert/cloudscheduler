#!/bin/bash 
###
### This utility must be run as root. It performs the following:
###
### 1. Ensure remote csv2-condor-poller is not already installed.
### 2. Checks to see if we are running as root.
### 3. Checks to see if we are installed correctly in /opt.
### 4. Checks to see if python3 is installed.
### 5. Creates a python3 virtual environment.
### 6. Checks/installs prerequisite pip modules.
### 7. Installs, enables, and starts csv2-condor-poller initd/systemd service.
###
check_sw () {
    # $1 - package
    # $2 - tested version

    IFS=. read tv1 tv2 tv3 <<EOF
$2
EOF
    TV=$(( ( ( ( $tv1 * 1000 ) + $tv2 ) * 1000 ) + $tv3 ))

    version=$(python3 -m pip show $1 | awk '/^Version/ {print $2}')
    IFS=. read av1 av2 av3 <<EOF
$version
EOF

    if [ "X$version" == 'X' ]; then
        read -p "The python package '$1' is not installed. Would you like to install it now? (y | n):" answer
        if [ "X$answer" == 'Xy' ]; then
            python3 -m pip install "$1==$2"
        fi
    else
        AV=$(( ( ( ( $av1 * 1000 ) + $av2 ) * 1000 ) + $av3 ))

        if [ $AV -gt $TV ]; then
           echo "Warning: The python package '$1' version $version is installed.  This is a later version than tested ($2)."

        elif [ $AV -lt $TV ]; then
            read -p "The python package '$1' version $version is installed. Would you like to upgrade it to the tested vesion ($2)? (y | n):" answer
            if [ "X$answer" == 'Xy' ]; then
                python3 -m pip install "$1==$2" --upgrade 
            fi
        fi
    fi  
}

###
### 1. Ensure remote csv2-condor-poller is not already installed.
###
    systemctl=$(which systemctl 2>&1)
    if [ "${systemctl:0:10}" == 'which: no ' ]; then
        chkconfig csv2-condor-poller
    else
        systemctl enable csv2-condor-poller >/dev/null 2>&1
    fi

    if [ $? -eq 0 ];
        echo 'Service csv2-condor-poller already enabled.'
        exit 0
    fi

###
### 2. Checks to see if we are running as root.
###
    if [ "$EUID" != '0' ]; then
        echo 'ERROR: This process needs to run as root.'
        exit 1
    fi  

###
### 3. Checks to see if we are installed correctly in /opt.
###
    home=$(realpath $0) $1
    if [ $home != '/opt/cloudscheduler/utilities/remote_condor_poller_enable' ]; then
        echo 'ERROR: Remote csv2-condor-poller must be installed in /opt.'
        exit 1
    fi
    exit 0

###
### 4. Checks to see if python3 is installed.
###
    python3=$(which python3 2>&1)
    if [ "${python3:0:10}" == 'which: no ' ]; then
        echo 'ERROR: You need to install python3 before we can proceed.'
        exit 1
    fi  

###
### 5. Creates a python3 virtual environment.
###
    stat /opt/cloudscheduler/python3 >/dev/null 2>&1
    if [ $? -ne 0 ];
        python3 -m venv /opt/cloudscheduler/python3
    fi

    source /opt/cloudscheduler/python3/bin/activate

###
### 6. Checks/installs prerequisite pip modules.
###
    check_sw boto3 1.9.130
    check_sw htcondor 8.9.0
    check_sw mysql-connector 2.2.9
#   check_sw mysqlclient 1.3.12    
    check_sw psutil 5.4.6
#   check_sw PyMySQL 0.8.1 
    check_sw PyYAML 5.1
    check_sw python-dateutil 2.8.1
    check_sw python-keystoneclient 3.16.0
    check_sw python-novaclient 10.3.0


###
### 7. Installs, enables, and starts csv2-condor-poller initd/systemd service.
###
    if [ "${systemctl:0:10}" == 'which: no ' ]; then
        cp /opt/cloudscheduler/etc/init.d/csv2-condor-poller.afile /etc/init.d/csv2-condor-poller
        chkconfig --add csv2-condor-poller
        service csv2-condor-poller start
    else
        cp /opt/cloudscheduler/etc/systemd/system/csv2-condor-poller.service.afile /etc/systemd/system/csv2-condor-poller.service
        systemctl enable csv2-condor-poller
        systemctl start csv2-condor-poller
    fi

