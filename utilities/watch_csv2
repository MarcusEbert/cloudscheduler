#!/bin/bash
function update {
    clear
    cat ${tmp}/p0
    cat ${tmp}/p1

    cat ${tmp}/p0 >> /tmp/watch_csv2_${SUDO_USER}.log
    cat ${tmp}/p1 >> /tmp/watch_csv2_${SUDO_USER}.log
    cat ${tmp}/p3 >> /tmp/watch_csv2_${SUDO_USER}.log
    mv -f ${tmp}/p1 ${tmp}/p2
}
    tmp=$(mktemp -d)
    IFS='"' read -r -a pw <<< $(grep db_password /etc/cloudscheduler/cloudscheduler.yaml)

    while true; do
        condor_q -allusers | tail -n +3 > ${tmp}/p0

        echo -e '\n--- condor_jobs -------------------------' > ${tmp}/p1
#       mysql -u csv2 -p${pw[1]} -t csv2 -e 'select request_cpus,request_disk div (1024*1024) as request_disk,request_ram,sum(case when job_status=1 then 1 else 0 end) as idle,sum(case when job_status=5 then 1 else 0 end) as held,sum(case when job_status!=1 and job_status!=5 then 1 else 0 end) as other from condor_jobs group by request_cpus,request_disk,request_ram;' >> ${tmp}/p1
        mysql -u csv2 -p${pw[1]} -t csv2 -e 'select user,target_clouds,image,instance_type,request_cpus,request_disk div (1024*1024) as request_disk,request_ram,sum(case when job_status=1 then 1 else 0 end) as idle,sum(case when job_status=2 then 1 else 0 end) as running,sum(case when job_status=4 then 1 else 0 end) as completed,sum(case when job_status=5 then 1 else 0 end) as held,sum(case when job_status!=1 and job_status!=2 and job_status!=4 and job_status!=5 then 1 else 0 end) as other from condor_jobs group by request_cpus,request_disk,request_ram;' >> ${tmp}/p1

        echo -e '\n--- view_groups_of_idle_jobs ------------' >> ${tmp}/p1
        mysql -u csv2 -p${pw[1]} -t csv2 -e 'select group_name,job_per_core,request_cpus_max as cpus_max,request_cpus_total as cpus_total,request_disk_max as disk_max,request_disk_total as disk_total,request_ram_max as ram_max,request_ram_total as ram_total,request_swap_max as swap_max,request_swap_total as swap_total,idle,running,completed,held,other,flavors from view_groups_of_idle_jobs;' >> ${tmp}/p1

        echo -e '\n--- view_available_resources ------------' >> ${tmp}/p1
#       mysql -u csv2 -p${pw[1]} -t csv2 -e 'select group_name,flavor,flavor_slots,flavor_cores,flavor_disk,flavor_ram,flavor_swap,flavor_VMs,flavor_manual,flavor_error,flavor_retiring from view_available_resources;' >> ${tmp}/p1
        mysql -u csv2 -p${pw[1]} -t csv2 -e 'select group_name,cloud_name,sum(flavor_slots),sum(flavor_VMs),sum(flavor_manual),sum(flavor_error),sum(flavor_retiring) from view_available_resources group by group_name,cloud_name;' >> ${tmp}/p1

        echo -e '\n--- condor slots (condor_machines)-------' >> ${tmp}/p1
#       mysql -u csv2 -p${pw[1]} -t csv2 -e 'select machine,slot_type,total_disk div (1024*1024) as total_disk from condor_machines;' >> ${tmp}/p1
#       mysql -u csv2 -p${pw[1]} -t csv2 -e 'select machine,slot_type,total_disk div (1024*1024) as total_disk,count(1) from condor_machines group by machine,slot_type,total_disk;' >> ${tmp}/p1
        mysql -u csv2 -p${pw[1]} -t csv2 -e 'select machine,min(total_disk div (1024*1024)) as total_disk,sum(case when slot_type="Partitionable" then 1 else 0 end) as primary_slots,sum(case when slot_type="Dynamic" then 1 else 0 end) as dynamic_slots from condor_machines group by machine;' >> ${tmp}/p1

        echo -e '\n--- csv2_vms ----------------------------' >> ${tmp}/p1
        mysql -u csv2 -p${pw[1]} -t csv2 -e 'select cv.group_name,cv.cloud_name,cf.name as flavor,hostname,htcondor_partitionable_slots as primary_slots,htcondor_dynamic_slots as dynamic_slots,htcondor_slots_timestamp as slots_timestamp,retire,terminate,status_changed_time,cv.last_updated from csv2_vms as cv left outer join cloud_flavors as cf on cv.group_name=cf.group_name and cv.cloud_name=cf.cloud_name and cv.flavor_id=cf.id;' >> ${tmp}/p1
#       mysql -u csv2 -p${pw[1]} -t csv2 -e 'select cv.group_name,cv.cloud_name,cf.name as flavor,hostname,htcondor_partitionable_slots as primary_slots,htcondor_dynamic_slots as dynamic_slots,htcondor_slots_timestamp as slots_timestamp,retire,terminate,status_changed_time,cv.last_updated,case when htcondor_partitionable_slots is null then unix_timestamp()-cv.last_updated else unix_timestamp()-ifnull(htcondor_slots_timestamp,unix_timestamp()) end as age from csv2_vms as cv left outer join cloud_flavors as cf on cv.group_name=cf.group_name and cv.cloud_name=cf.cloud_name and cv.flavor_id=cf.id;' >> ${tmp}/p1

        echo -e '\n--- view_idle_vms -----------------------' >> ${tmp}/p1
        mysql -u csv2 -p${pw[1]} -t csv2 -e 'select * from view_idle_vms;' >> ${tmp}/p1

        if [ -e ${tmp}/p2 ]; then
            diff -q ${tmp}/p1 ${tmp}/p2 
            if [ $? == 1 ]; then
                update
            else
                echo "No change." >>/tmp/watch_csv2_${SUDO_USER}.log
            fi
        else
            update
        fi
        sleep 10
    done
