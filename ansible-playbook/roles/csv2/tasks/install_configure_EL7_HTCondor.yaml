---
# install_configure_EL7_HTCondor.yaml

- name: create condor certificate directories
  file:
    dest: /etc/grid-security/condor/worker
    state: directory
    owner: root
    group: root
    mode: 0755
  when: (container is undefined) or (container == False)

- name: install the grid map file
  copy:
    src: etc_grid-security_grid-mapfile
    dest: /etc/grid-security/grid-mapfile
    owner: root
    group: root
    mode: 0644
  when: (container is undefined) or (container == False)

- name: install condor certificate file
  copy:
    src: /root/Downloads/grid-security/condor/condorcert.pem
    dest: /etc/grid-security/condor/condorcert.pem
    owner: root
    group: root
    mode: 0644
  when: (container is undefined) or (container == False)

- name: install condor private key file
  copy:
    src: /root/Downloads/grid-security/condor/condorkey.pem
    dest: /etc/grid-security/condor/condorkey.pem
    owner: root
    group: root
    mode: 0600
  when: (container is undefined) or (container == False)

# name: create condorworker certificate directory
# file:
#   dest: /etc/grid-security/condor/worker
#   state: directory

- name: install condorworker certificate file
  copy:
    src: /root/Downloads/grid-security/condor/worker/condorworkercert.pem
    dest: /etc/grid-security/condor/worker/condorworkercert.pem
    owner: root
    group: root
    mode: 0644
  when: (container is undefined) or (container == False)

- name: install condorworker private key file
  copy:
    src: /root/Downloads/grid-security/condor/worker/condorworkerkey.pem
    dest: /etc/grid-security/condor/worker/condorworkerkey.pem
    owner: root
    group: root
    mode: 0600
  when: (container is undefined) or (container == False)

- name: configure HTCondor repository
  get_url:
    url: http://research.cs.wisc.edu/htcondor/yum/repo.d/htcondor-stable-rhel7.repo
    dest: /etc/yum.repos.d/htcondor-stable-rhel7.repo
    mode: 0644

- name: install HTCondor repository GPG keys
  rpm_key:
    key: http://research.cs.wisc.edu/htcondor/yum/RPM-GPG-KEY-HTCondor
    state: present

- name: install HTCondor
  yum: name={{ item }} state=latest
  with_items:
  - condor-all
  - fetch-crl
  - globus-proxy-utils

- name: create an admin proxy certificate
  command: grid-proxy-init -cert /etc/grid-security/condor/condorcert.pem  -key /etc/grid-security/condor/condorkey.pem  -valid 12000:0
  args:
    creates: /tmp/x509up_u0
  when: (container is undefined) or (container == False)

- name: HTCondor local configuration
  copy:
    src: etc_condor_condor_config.local
    dest: /etc/condor/condor_config.local
    owner: root
    group: root
    mode: 0644
  notify:
  - restart condor
  when: container is undefined

- name: HTCondor local container configuration
  copy:
    src: etc_condor_condor_config.local.container  
    dest: /etc/condor/condor_config.local
    owner: root
    group: root
    mode: 0644
  notify:
  - restart condor
  when: container is defined  

- name: Get public IP address
  ipify_facts:
  when: 
  - container is defined
  - container == True

- name: add line to local config indicating public IP address for container target
  lineinfile:
    path: /etc/condor/condor_config.local
    regexp: '^NETWORK_INTERFACE = '
    line: 'NETWORK_INTERFACE = {{ ipify_public_ip }}'
  when: 
  - container is defined
  - container == True

- set_fact:
      gsi_source_file: gsi
  when: (container is undefined) or (container == False)

- set_fact: 
      gsi_source_file: gsi.container
  when: 
  - container is defined
  - container == True

- name: do something with both gsi files so they're both included in ansible
  copy:
    src: "etc_condor_config.d_{{ item }}"
    dest: "/jobs"
  with_items:
  - gsi
  - gsi.container

- name: HTCondor configure 
  copy:
    src:  "etc_condor_config.d_{{ item }}"
    dest: "/etc/condor/config.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
  - default_request
  - defrag
  - gsi
  - gsi.container
  - ports
  - scaling
  - system_hold
  notify:
  - restart condor

- name: rename gsi target file for container target
  shell: mv /etc/condor/config.d/gsi.container /etc/condor/config.d/gsi
  when: 
  - container is defined
  - container == True

- name: open HTCondor service port
  firewalld: zone=public port=9618/tcp  state=enabled immediate=yes permanent=yes
  when: (container is undefined) or (container == False)

- name: open HTCondor ephemeral ports
  firewalld: zone=public port=40000-50000/tcp  state=enabled immediate=yes permanent=yes
  when: (container is undefined) or (container == False)

- meta: flush_handlers
