/*
** Retrieve groups/cloud summary information.
*/
create or replace view view_cloud_status_raw as

/*
** Retrieve all groups.
*/
select

group_name,
cloud_name,
0 as VMs,
0 as VMs_unregistered,
0 as VMs_running,
0 as VMs_retiring,
0 as VMs_manual,
0 as VMs_in_error,
0 as VMs_other,
0 as Foreign_VMs,
0 as Jobs,
0 as Jobs_s0,
0 as Jobs_s1,
0 as Jobs_s2,
0 as Jobs_s3,
0 as Jobs_s4,
0 as Jobs_s5,
0 as Jobs_s6

from csv2_group_resources

/*
** Retrieve job count for each group.
*/
union all select

group_name,
ifnull(cloud_name,'(queued or held)') as cloud_name,
0 as VMs,
0 as VMs_unregistered,
0 as VMs_running,
0 as VMs_retiring,
0 as VMs_manual,
0 as VMs_in_error,
0 as VMs_other,
0 as Foreign_VMs,
1 as Jobs,
case when job_status=0 then 1 else 0 end as Jobs_s0,
case when job_status=1 then 1 else 0 end as Jobs_s1,
case when job_status=2 then 1 else 0 end as Jobs_s2,
case when job_status=3 then 1 else 0 end as Jobs_s3,
case when job_status=4 then 1 else 0 end as Jobs_s4,
case when job_status=5 then 1 else 0 end as Jobs_s5,
case when job_status=6 then 1 else 0 end as Jobs_s6

from condor_jobs

/*
** Retrieve VM count for each group.
*/
union all select

group_name,
cloud_name,
case when foreign_vm=0 then 1 else 0 end as VMs,
case when poller_status="unregistered" then 1 else 0 end as VMs_unregistered,
case when poller_status="running" then 1 else 0 end as VMs_running,
case when poller_status="retiring" then 1 else 0 end as VMs_retiring,
case when poller_status="manual" then 1 else 0 end as VMs_manual,
case when poller_status="error" then 1 else 0 end as VMs_in_error,
case when foreign_vm=0 and (isnull(poller_status) or (poller_status!="running" and poller_status!="retiring" and poller_status!="error")) then 1 else 0 end as VMs_other,
case when foreign_vm=0 then 0 else 1 end as Foreign_VMs,
0 as Jobs,
0 as Jobs_s0,
0 as Jobs_s1,
0 as Jobs_s2,
0 as Jobs_s3,
0 as Jobs_s4,
0 as Jobs_s5,
0 as Jobs_s6

from view_vms

;
