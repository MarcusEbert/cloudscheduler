/*
** Retrieve a dictionary of attributes for all available flavors. The attributes for a particular flavor can 
** accessed as follows:
**
**    resources = json.loads(config.db_connection.execute(select([view_available_resources_json])).fetchone().flavors)
**    if 'otter:s1' in resources:
**        print(resources['otter:s1'].keys())
*/
create or replace view view_available_resources_json as
select
replace(
    concat("{", group_concat(flavor_attributes),"}"),
    "''",
    '"'
    ) as flavors
from (
    /* n02 */
    select
    1 as grouping,
    concat(" ''", flavor, "'': ", attributes) as flavor_attributes
    from (
        /* n01 */
        select
        flavor,
        replace(
            json_object(
                'group_name', group_name,
                'cloud_name', cloud_name,
                'enabled', enabled,
                'spot_price', spot_price,
                'default_image', default_image,
                'keep_alive', keep_alive,
                'default_network', default_network,
                'authurl', authurl,
                'project', project,
                'username', username,
                'password', password,
                'keyname', keyname,
                'cacertificate', cacertificate,
                'region', region,
                'user_domain_name', user_domain_name,
                'project_domain_name', project_domain_name,
                'cloud_type', cloud_type,
                'cores_max', cores_max,
                'cores_ctl', cores_ctl,
                'cores_used', cores_used,
                'cores_native', cores_native,
                'cores_foreign', cores_foreign,
                'cores_idle', cores_idle,
                'ram_max', ram_max,
                'ram_ctl', ram_ctl,
                'ram_used', ram_used,
                'ram_native', ram_native,
                'ram_foreign', ram_foreign,
                'ram_idle', ram_idle,
                'flavor_name', flavor_name,
                'flavor_id', flavor_id,
                'flavor_instance_type', flavor_instance_type,
                'flavor_cores', flavor_cores,
                'flavor_disk', flavor_disk,
                'flavor_enduring_disk', flavor_enduring_disk,
                'flavor_ephemeral_disk', flavor_ephemeral_disk,
                'flavor_ram', flavor_ram,
                'flavor_swap', flavor_swap,
                'flavor_priority', flavor_priority,
                'flavor', flavor,
                'flavor_slots', flavor_slots
                ),
            '"', "''") as attributes
        from view_available_resources as var
        ) as n01
    ) as n02
group by grouping

;
