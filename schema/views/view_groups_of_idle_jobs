/*
** Retrieve all jobs with status grouping those with similar charcateristics.
*/
create or replace view view_groups_of_idle_jobs as 
/* n03 - Group Job/Clouds per unique resource requirements, concatenating flavors */
select
    group_name,
    target_clouds,
    instance_type,
    requirements,
    job_priority,
    user,
    image,
    network,
    keep_alive,
    max_price,
    user_data,
    job_per_core,
    request_cpus_min,
    request_cpus_max,
    request_cpus_total,
    request_disk_min,
    request_disk_max,
    request_disk_total,
    request_ram_min,
    request_ram_max,
    request_ram_total,
    request_swap_min,
    request_swap_max,
    request_swap_total,
    queue_date,
    idle,
    running,
    completed,
    held,
    other,
    group_concat(distinct flavor) as flavors
from (
    /* n02 - Finalize request specifications and counters */
    select
        group_name,
        target_clouds,
        instance_type,
        requirements,
        job_priority,
        user,
        image,
        network,
        keep_alive,
        max_price,
        user_data,
        job_per_core,
        flavor,
        flavor_priority,
        min(request_cpus) as request_cpus_min,
        max(request_cpus) as request_cpus_max,
        sum(request_cpus) as request_cpus_total,
        min(request_disk) as request_disk_min,
        max(request_disk) as request_disk_max,
        sum(request_disk) as request_disk_total,
        min(request_ram) as request_ram_min,
        max(request_ram) as request_ram_max,
        sum(request_ram) as request_ram_total,
        min(request_swap) as request_swap_min,
        max(request_swap) as request_swap_max,
        sum(request_swap) as request_swap_total,
        min(queue_date) as queue_date,
        sum(case when job_status=1 then count else 0 end) as idle,
        sum(case when job_status=2 then count else 0 end) as running,
        sum(case when job_status=4 then count else 0 end) as completed,
        sum(case when job_status=5 then count else 0 end) as held,
        sum(case when job_status!=1 and job_status!=2 and job_status!=4 and job_status!=5 then count else 0 end) as other
    from (
        /* n11 - Get groups of jobs by job_status and attach flavor information */
        select
            n01.*,
            var.flavor,
            row_number() over (partition by
                group_name,
                cloud_name,
                target_clouds,
                job_status,
                requirements,
                job_priority,
                user,
                image,
                instance_type,
                network,
                keep_alive,
                max_price,
                user_data,
                job_per_core,
                request_cpus,
                request_disk,
                request_ram,
                request_swap
            order by
                flavor_cores,
                flavor_ram,
                flavor_disk,
                flavor_swap
            ) as flavor_priority
        from (
            /* n01 - Get groups of jobs by job_status and attach flavor information */
            select
                group_name,
                target_clouds,
                instance_type,
                job_status,
                requirements,
                job_priority,
                user,
                image,
                network,
                keep_alive,
                max_price,
                user_data,
                job_per_core,
                ifnull(request_cpus,0) as request_cpus,
                ifnull(request_disk / (1024 * 1024),0) as request_disk,
                ifnull(request_ram,0) as request_ram,
                ifnull(request_swap,0) as request_swap,
                min(q_date) as queue_date,
                count(1) as count
            from condor_jobs
            group by
                group_name,
                target_clouds,
                job_status,
                requirements,
                job_priority,
                user,
                image,
                instance_type,
                network,
                keep_alive,
                max_price,
                user_data,
                job_per_core,
                request_cpus,
                request_disk,
                request_ram,
                request_swap
            ) as n01
        join view_available_resources as var on
            n01.group_name=var.group_name and 
            case when n01.target_clouds is null or instr(n01.target_clouds, var.cloud_name) > 0 then
                case when n01.instance_type is null then
                    case when
                        n01.request_cpus <= var.flavor_cores and 
                        n01.request_disk <= var.flavor_disk and 
                        n01.request_ram  <= var.flavor_ram and 
                        n01.request_swap <= var.flavor_swap
                    then 
                        1
                    else
                        0
                    end
                else
                    case when n01.instance_type = var.flavor then
                        1
                    else
                        0
                    end
                end
            else
                0
            end > 0 
        ) as n11
    where flavor_priority=1
    group by
        group_name,
        target_clouds,
        instance_type,
        requirements,
        job_priority,
        user,
        image,
        network,
        keep_alive,
        max_price,
        user_data,
        job_per_core,
        flavor
    ) as n02
group by
    group_name,
    target_clouds,
    instance_type,
    requirements,
    job_priority,
    user,
    image,
    network,
    keep_alive,
    max_price,
    user_data,
    job_per_core,
    request_cpus_min,
    request_cpus_max,
    request_disk_min,
    request_disk_max,
    request_ram_min,
    request_ram_max,
    request_swap_min,
    request_swap_max,
    queue_date,
    idle,
    running,
    completed,
    held,
    other
;
