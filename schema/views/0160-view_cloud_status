/*
** Retrieve groups/cloud summary information.
*/
create or replace view view_cloud_status as

/*
** Retrieve all groups.
*/
select

vcsr.group_name,
vcsr.cloud_name,
cast(sum(VMs) as int) as VMs,
cast(sum(VMs_unregistered) as int) as VMs_unregistered,
cast(sum(VMs_running) as int) as VMs_running,
cast(sum(VMs_retiring) as int) as VMs_retiring,
cast(sum(VMs_manual) as int) as VMs_manual,
cast(sum(VMs_in_error) as int) as VMs_in_error,
cast(sum(VMs_other) as int) as VMs_other,
cast(sum(Foreign_VMs) as int) as Foreign_VMs,
cast(sum(condor_slots) as int) as "slots_max",
cast(sum(condor_slots_used) as int) as "slots_used",
cast(case when sum(condor_slots)=0 then 0 else round(sum(condor_slots_used) * 100 / sum(condor_slots), 2) end as double) as slots_percent,
case when cores_ctl is null then 0 else case when cores_ctl=-1 or cores_ctl>cores_max then cores_max else cores_ctl end end as cores_max,
cores_used,
cast(case when cores_ctl is null then 0 else case when cores_ctl=-1 then case when cores_max=0 then 0 else round(cores_used*100/cores_max, 2) end else case when cores_ctl=0 then 0 else round(cores_used*100/cores_ctl, 2) end end end as double) as cores_percent,
case when ram_ctl is null then 0 else case when ram_ctl=-1 or ram_ctl>ram_max then ram_max else ram_ctl end end as ram_max,
ram_used,
cast(case when ram_ctl is null then 0 else case when ram_ctl=-1 then case when ram_max=0 then 0 else round(ram_used*100/ram_max, 2) end else case when ram_ctl=0 then 0 else round(ram_used*100/ram_ctl, 2) end end end as double) as ram_percent

from view_cloud_status_raw as vcsr

left outer join view_group_resources as vgr on
vcsr.group_name=vgr.group_name and
vcsr.cloud_name=vgr.cloud_name

group by group_name,cloud_name

;
