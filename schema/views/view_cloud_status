/*
** List all group resources (clouds) with VM & resource counts.
*/
create or replace view view_cloud_status as

select

grwvs.group_name,
grwvs.cloud_name,
vgr.enabled,
vgr.cascading_vm_flavor as default_flavor,
vgr.cascading_vm_image as default_image,
vgr.cascading_vm_keep_alive as keep_alive,
cast(sum(VMs) as int) as VMs,
cast(sum(VMs_unregistered) as int) as VMs_unregistered,
cast(sum(VMs_running) as int) as VMs_running,
cast(sum(VMs_retiring) as int) as VMs_retiring,
cast(sum(VMs_manual) as int) as VMs_manual,
cast(sum(VMs_in_error) as int) as VMs_in_error,
cast(sum(VMs_other) as int) as VMs_other,
cast(sum(Foreign_VMs) as int) as Foreign_VMs,
cast(sum(grwvs.cores_ctl) as int) as cores_ctl,
cast(sum(grwvs.cores_max) as int) as cores_max,
cast(sum(grwvs.cores_native) as int) as cores_busy,
cast(sum(grwvs.cores_foreign) as int) as cores_foreign,
cast(sum(grwvs.cores_idle) as int) as cores_idle,
cast(sum(grwvs.cores_idle)+sum(grwvs.cores_native) as int) as cores_native,
cast(sum(grwvs.ram_ctl) as int) as ram_ctl,
cast(sum(grwvs.ram_max) as int) as ram_max,
cast(sum(grwvs.ram_native) as int) as ram_busy,
cast(sum(grwvs.ram_foreign) as int) as ram_foreign,
cast(sum(grwvs.ram_idle) as int) as ram_idle,
cast(sum(grwvs.ram_idle)+sum(grwvs.ram_native) as int) as ram_native,
cast(sum(condor_slots) as int) as slots_max,
cast(sum(condor_slots_used) as int) as slots_used

from (
    select

    group_name,
    cloud_name,
    0 as VMs,
    0 as VMs_unregistered,
    0 as VMs_running,
    0 as VMs_retiring,
    0 as VMs_manual,
    0 as VMs_in_error,
    0 as VMs_other,
    0 as Foreign_VMs,
    cores_ctl,
    cores_max,
    cores_native,
    cores_foreign,
    cores_idle,
    ram_ctl,
    ram_max,
    ram_native,
    ram_foreign,
    ram_idle,
    0 as condor_slots,
    0 as condor_slots_used

    from view_group_resources

    /*
    ** Retrieve VM count for each group.
    */
    union all select

    group_name,
    cloud_name,
    case when foreign_vm=0 then 1 else 0 end as VMs,
    case when poller_status="unregistered" then 1 else 0 end as VMs_unregistered,
    case when poller_status="running" then 1 else 0 end as VMs_running,
    case when poller_status="retiring" then 1 else 0 end as VMs_retiring,
    case when poller_status="manual" then 1 else 0 end as VMs_manual,
    case when poller_status="error" then 1 else 0 end as VMs_in_error,
    case when poller_status="other" then 1 else 0 end as VMs_other,
    case when poller_status="foreign" then 1 else 0 end as Foreign_VMs,
    0 as cores_ctl,
    0 as cores_max,
    0 as cores_native,
    0 as cores_foreign,
    0 as cores_idle,
    0 as ram_ctl,
    0 as ram_max,
    0 as ram_native,
    0 as ram_foreign,
    0 as ram_idle,
    condor_slots,
    condor_slots_used

    from view_vms
    ) as grwvs /* group_resources_with_vm_status */

left outer join view_group_resources as vgr on
grwvs.group_name=vgr.group_name and
grwvs.cloud_name=vgr.cloud_name

group by group_name,cloud_name

;
