/*
** From view_condor_jobs_group_defaults_applied and view_available_resources,
** summarise idle jobs with matching requirements and combine
** with resources capable of meeting the job requirements. The result is one row
** per job group/resource combination order by flavor_priority (base on cores,
** ram, disk, scratch, and swap) within job_priority/q_date.
*/
create or replace view view_groups_of_idle_jobs_raw as

/*
** Retrieve data from condor_jobs and view_available_resources.
*/
select

  vcjgda.group_name,
  target_clouds,
  request_cpus,
  request_ram,
  request_disk,
  request_scratch,
  request_swap,
  requirements,
  job_priority,
  user,
  image,
  instance_type,
  network,
  max_price,
  user_data,
  job_per_core,
  min(q_date) as queue_date,
  flavor,
  case when instr(instance_type, flavor_instance_type) > 0 then 0 else 1 end as flavor_mismatch,
  flavor_cores,
  flavor_ram,
  flavor_disk,
  flavor_scratch,
  flavor_swap,

  /*
  ** Use row_number() DB window function to create the flavor_priority.
  */
  row_number() over (partition by 
    group_name,
    target_clouds,
    request_cpus,
    request_ram,
    request_disk,
    request_scratch,
    request_swap,
    requirements,
    job_priority,
    user,
    image,
    instance_type,
    network,
    max_price,
    user_data,
    job_per_core,
    queue_date
  order by
    instance_type,
    flavor_mismatch,
    flavor_cores,
    flavor_ram,
    flavor_disk,
    flavor_scratch,
    flavor_swap
  ) as flavor_priority,

  /*
  ** Count the items in each group.
  */
  sum(js_idle) as idle,
  sum(js_running) as running,
  sum(js_completed) as completed,
  sum(js_held) as held,
  sum(js_other) as other

from view_condor_jobs_group_defaults_applied as vcjgda

left outer join view_available_resources as var on
  vcjgda.group_name=var.group_name and
  request_cpus<=cores and
  request_ram<=ram 

/*
** Define the grouping.
*/
group by
  vcjgda.group_name,
  target_clouds,
  request_cpus,
  request_ram,
  request_disk,
  request_scratch,
  request_swap,
  requirements,
  job_priority,
  user,
  image,
  instance_type,
  network,
  max_price,
  user_data,
  job_per_core,
  flavor

order by 
  instance_type,
  flavor_mismatch,
  flavor_cores,
  flavor_ram,
  flavor_disk,
  flavor_scratch,
  flavor_swap 

;
