/*
** Create a uniqie flavor ID for each group/cloud/flavor combination, and drop
** any row where the resources available cannot meet the demands of the flavor.
*/
create or replace view view_available_resources2 as

select
  varr.*,
  cast(least(round(cores/flavor_cores), round(ram/flavor_ram)) as integer) as flavor_slots,
  case when VMs_up is not NULL then VMs_up else 0 end as VMs_up,
  case when VMs_down is not NULL then VMs_down else 0 end as VMs_down

from view_available_resources_raw as varr 
left outer join (
    select
    concat(cv.group_name, ":", cv.cloud_name, ":", cf.name) as flavor,
    sum(case when status="ACTIVE" and power_status=1 and task is NULL then 1 else 0 end) as VMs_up,
    sum(case when status!="ACTIVE" or power_status!=1 or task is not NULL then 1 else 0 end) as VMs_down
    from csv2_vms as cv
    join cloud_flavors as cf on
    cv.group_name=cf.group_name and
    cv.cloud_name=cf.cloud_name and
    flavor_id=id
    ) as vvud
  on varr.flavor=vvud.flavor
  
where
  flavor_cores<=cores and
  flavor_ram<=ram

order by group_name,cloud_name,flavor_priority

;
