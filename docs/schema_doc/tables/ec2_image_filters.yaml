ec2_image_filters:
    Synopsis:
        "This table maintains user defined image filters, created, modified and deleted \\
        through the User Interface (UI).

        Rational and Description of CSV2's Two Stage Image Filtering \\
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

        Amazon EC2 shares many thousands of (kernel) images owned and offered by their \\
        users. Many of these images should be of little interest since the owner could be \\
        anyone who uses Amazon EC2 and the content of their images could be unreliable \\
        or malicious.

        The fact that there are so many images can make the selection of an image for \\
        execution difficult. To ease this problem, CSV2 provides the following two stage \\
        filtering process:

        * Amazon EC2 Image Information Retrieval:

        \\   The **csv2_ec2** poller retieves only those images from Amazon EC2 that match
        \\   owner IDs or owner aliases specified by users in the **ec2_image_filters** table.
        \\   The normally small subset of images retrieved are placed in the ec2_images
        \\   table for inspection through the User Interface (UI) and for additional
        \\   filtering by the csv2_ec2 poller. This primary retieval process is run on
        \\   a long cycle (the configurable **sleep_interval_image**) since the inventory
        \\   of owners and of shared images remains fairly static.

        * Amazon EC2 Image Filtering:
        
        \\   CSV2 will only instantiate images listed in the **cloud_images** table. The
        \\   **csv2_ec2** poller must convert **ec2_images** to **cloud_images** and when
        \\   doing so applies all defined filters, including **like**, **not_like**, **operating_systems**,
        \\   and **architecture** in addition to the owner information, resulting in a
        \\   smaller subset of image available for execution. This filtering process is
        \\   run on a short cycle defined by the configurable **sleep_interval_filterer**.

        All filter specifications are joined with a logical **AND**."

    Keys:

        group_name:
            Format: String(32)
            Synopsis:
                REF=(tables/csv2_clouds/Keys/group_name)

        cloud_name:
            Format: String(32)
            Synopsis:
                REF=(tables/csv2_clouds/Keys/cloud_name)

    Columns:

        owner_aliases:
            Format: String(128)
            Synopsis:
                Is a comma seperated list of owner aliases, as defined in the table
                **ec2_well_known_owner_aliases**, who are offering images of interest.

        owner_ids:
            Format: String(128)
            Synopsis:
                Is a comma seperated list of owner IDs who are offering images of interest.

        like:
            Format: String(128)
            Synopsis:
                "If an image's **lower_location** (generated by view_ec2_images_) matches this string, the corresponding
                image will be selected by this specification.

                .. _view_ec2_images: https://cloudscheduler.readthedocs.io/en/latest/_architecture/_data_services/_database/_views/view_ec2_images.html
                "

        not_like:
            Format: String(128)
            Synopsis:
                "If an image's **lower_location** (generated by view_ec2_images_) does not match this string, the corresponding
                image will be selected by this specification.

                .. _view_ec2_images: https://cloudscheduler.readthedocs.io/en/latest/_architecture/_data_services/_database/_views/view_ec2_images.html
                "

        operating_systems:
            Format: String(128)
            Synopsis:
                "If an image's **opsys** (generated by view_ec2_images_) matches this string, the corresponding image will be
                selected by this specification.

                .. _view_ec2_images: https://cloudscheduler.readthedocs.io/en/latest/_architecture/_data_services/_database/_views/view_ec2_images.html
                "

        architectures:
            Format: String(128)
            Synopsis:
                "If an image's **arch** (generated by view_ec2_images_) matches this string, the corresponding image will be
                selected by this specification.

                .. _view_ec2_images: https://cloudscheduler.readthedocs.io/en/latest/_architecture/_data_services/_database/_views/view_ec2_images.html
                "

