.. File generated by /opt/cloudscheduler/utilities/schema_doc - DO NOT EDIT
..
.. To modify the contents of this file:
..   1. edit the template file ".../cloudscheduler/docs/schema_doc/tables/cloud_limits.yaml"
..   2. run the utility ".../cloudscheduler/utilities/schema_doc"
..

Database Table: cloud_limits
============================

For each cloud defined within a group, CSV2 process will attempt to
retrieve configuration data to inform scheduling decisions and users. These configuration items
are set by the cloud administrators and not by CSV2. In order
to change these values, you will need to confer with the target
cloud support.

The information stored in this table concern the limits set on the
target cloud account.


Keys:
^^^^^

* **group_name** (String(32)):

      Group name associated with the cloud the limit was queried from.

* **cloud_name** (String(32)):

      Name of the cloud the limits were queried from.


Columns:
^^^^^^^^

* **cloud_type** (String(64)):

      Type of cloud the limits were queried from (Openstack, Amazon, etc)

* **server_meta_max** (Integer):

      Max number of metadata entries that can be associated with a server
      as defined by the cloud.

* **instances_max** (Integer):

      Max number of active instances as defined by the cloud.

* **personality_max** (Integer):

      Man number of personality files that can be injected into a server
      as defined by the cloud.

* **image_meta_max** (Integer):

      Max number of metadata entries that can be associated with a machine
      image as defined by the cloud.

* **personality_size_max** (Integer):

      Max size of server personality files in bytes.

* **ram_max** (Integer):

      Total amount of ram available for the registered cloud tenant/project.

* **server_groups_max** (Integer):

      Max number of server groups available for the registered cloud tenant/project.

* **security_group_rules_max** (Integer):

      Max number of security group rules allowed for a security group as
      defined by the cloud.

* **keypairs_max** (Integer):

      Max number of keypairs allowed to be stored under the registered cloud
      tenant/project.

* **security_groups_max** (Integer):

      Max number of security groups available for the registered cloud tenant/project.

* **server_group_members_max** (Integer):

      Max number of servers per server group as defined by the cloud.

* **floating_ips_max** (Integer):

      Max number of available floating IPs as defined by the cloud

* **cores_max** (Integer):

      Total number of cores available for the registered cloud tenant/project.

* **server_groups_used** (Integer):

      Total number of server groups in use for the registered tenant/project.

* **instances_used** (Integer):

      Total number of active instances in use by the registered tenant/project.

* **ram_used** (Integer):

      Total amount of RAM in use by the registered tenant/project in Megabytes.

* **security_groups_used** (Integer):

      Total number of security groups in use by the registered tenant/project.

* **floating_ips_used** (Integer):

      Total number of floating IPs in use by the registered tenant/project.

* **cores_used** (Integer):

      Total number of CPU cores in use by the registered tenant/project.

* **last_updated** (Integer):

      Timestamp in seconds from epoch representing the last time the limits were
      queried and updated.

