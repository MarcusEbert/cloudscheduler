.. File generated by /opt/cloudscheduler/utilities/schema_doc - DO NOT EDIT
..
.. To modify the contents of this file:
..   1. edit the template file ".../cloudscheduler/docs/schema_doc/views/view_vm_kill_retire_priority_age.yaml"
..   2. run the utility ".../cloudscheduler/utilities/schema_doc"
..

Database View: view_vm_kill_retire_priority_age
===============================================

This view is one of a suite of related views used by
the cloud pollers, HTCondor machine poller and User Interface (UI) processes to
ensure that resource usage on clouds remains within allocated quotas and user
defined limits. The suite includes:

#. view_condor_host_

#. view_vm_kill_retire_over_quota_

#. view_vm_kill_retire_priority_age_

#. view_vm_kill_retire_priority_idle_

.. _view_condor_host: https://cloudscheduler.readthedocs.io/en/latest/_architecture/_data_services/_database/_views/view_condor_host.html

.. _view_vm_kill_retire_over_quota: https://cloudscheduler.readthedocs.io/en/latest/_architecture/_data_services/_database/_views/view_vm_kill_retire_over_quota.html

.. _view_vm_kill_retire_priority_age: https://cloudscheduler.readthedocs.io/en/latest/_architecture/_data_services/_database/_views/view_vm_kill_retire_priority_age.html

.. _view_vm_kill_retire_priority_idle: https://cloudscheduler.readthedocs.io/en/latest/_architecture/_data_services/_database/_views/view_vm_kill_retire_priority_idle.html

The view_vm_kill_retire_priority_age creates a list of VMs to terminate and is used
by the User Interface (UI) processes to respond to resource control changes.
Sorted in descending priority order, each VM entry has running totals of
both cores and RAM. By selecting the first N entries, known quantities
of resources can be released, or by selecting the last N entries,
known quantities of active resources can be retained.

This view prioritizes the age of the VM which is set to
the time in seconds since the last stater change. The higher the
age/priority, the lower the resource aggregates, and the earlier in the list
the VM entry appears.


Columns:
^^^^^^^^

* **group_name** (String(32)):

      Is the name of the group owning the VM.

* **cloud_name** (String(32)):

      Is the name of the cloud hosting the VM.

* **vmid** (String(128)):

      Is the unique ID of the VM.

* **flavor_id** (String(128)):

      Is the flavor ID used to instantiate the VM. The flavor determines
      the the (cpu) cores and RAM utilized by the VM which is
      used to determine the resource aggregates.

* **machine** (String(256)):

      Is the unique machine name assigned by HTCondor.

* **killed** (Integer):

      Is the total number of termination requests issued to this VM.

* **retired** (Integer):

      Is the total number of retire requests issued to this VM.

* **priority** (Integer):

      Is the calculated VM priority.

* **flavor_cores** (Integer):

      Is the aggregate nubmer of cores for all the VMs from the
      beginning of the list up to and including this entry.

* **flavor_ram** (Integer):

      Is the aggregate size in kilobytes of RAM for all the VMs
      from the beginning of the list up to and including this entry.

