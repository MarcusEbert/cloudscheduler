---
# install_configure_EL7_HTCondor.yaml

- name: open HTCondor service port
  firewalld: zone=public port=9618/tcp  state=enabled immediate=yes permanent=yes
  when: (container is undefined) or (container == False)
  ignore_errors: yes

- name: open HTCondor ephemeral ports
  firewalld: zone=public port=40000-50000/tcp  state=enabled immediate=yes permanent=yes
  when: (container is undefined) or (container == False)
  ignore_errors: yes

- name: configure HTCondor repository
  get_url:
    url: http://research.cs.wisc.edu/htcondor/yum/repo.d/htcondor-stable-rhel7.repo
    dest: /etc/yum.repos.d/htcondor-stable-rhel7.repo
    mode: 0644

- name: install HTCondor repository GPG keys
  rpm_key:
    key: http://research.cs.wisc.edu/htcondor/yum/RPM-GPG-KEY-HTCondor
    state: present

- name: install HTCondor
  yum: name={{ item }} state=latest
  with_items:
  - condor

- name: HTCondor local configuration
  copy:
    src: etc_condor_condor_config.local
    dest: /etc/condor/condor_config.local
    owner: root
    group: root
    mode: 0644
  notify:
  - reconfigure condor
  when: container is undefined

# If you ever use the IP address, change etc_condor_condor_config.local.container to a template.
# name: Get public IP address
# ipify_facts:
# when: 
# - container is defined
# - container == True

- name: HTCondor local container configuration
  copy:
    src: etc_condor_condor_config.local.container.minimal  
    dest: /etc/condor/condor_config.local
    owner: root
    group: root
    mode: 0644
  notify:
  - reconfigure condor
  when: container is defined  

- name: HTCondor configure 
  copy:
    src:  "etc_condor_config.d_{{ item }}"
    dest: "/etc/condor/config.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
  - default_request
  - defrag
  - ports
  - scaling
  - system_hold
  notify:
  - reconfigure condor
  when: 
  - container is defined
  - container == True

- name: install GSI tools
  yum: name={{ item }} state=latest
  with_items:
  - fetch-crl
  - globus-proxy-utils
  when:
  - htcondor_cert is defined
  - htcondor_worker_cert is defined

- name: ensure fetch-crl-boot service is enabled and started
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  ignore_errors: yes
  with_items:
  - fetch-crl-boot
  when:
  - htcondor_cert is defined
  - htcondor_worker_cert is defined

- name: ensure fetch-crl-cron service is enabled and started
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items:
  - fetch-crl-cron
  when:
  - htcondor_cert is defined
  - htcondor_worker_cert is defined

- name: make sure fetch-crl is quiet about unsuccessful CRL validations
  copy:
    src:  etc_fetch-crl.d_noerrors.conf
    dest: /etc/fetch-crl.d/noerrors.conf
    owner: root
    group: root
    mode: 0644
  when:
  - htcondor_cert is defined
  - htcondor_worker_cert is defined

- name: HTCondor GSI configuration 
  template:
    src:  etc_condor_config.d_gsi.j2
    dest: /etc/condor/config.d/gsi
    owner: root
    group: root
    mode: 0644
  notify:
  - reconfigure condor
  when:
  - htcondor_cert is defined
  - htcondor_worker_cert is defined

- name: install the grid-mapfile if defined
  copy:
    src: "{{ grid_mapfile }}"
    dest: /etc/grid-security/grid-mapfile
    owner: root
    group: root
    mode: 0644
  when:
  - grid_mapfile is defined
  - htcondor_cert is defined
  - htcondor_worker_cert is defined

- name: install host certificate file
  copy:
    src: "{{ htcondor_cert }}"
    dest: /etc/grid-security/hostcert.pem
    owner: root
    group: root
    mode: 0644
  when:
  - htcondor_cert is defined
  - htcondor_key is defined

- name: install host private key file
  copy:
    src: "{{ htcondor_key }}"
    dest: /etc/grid-security/hostkey.pem
    owner: root
    group: root
    mode: 0400
  when:
  - htcondor_cert is defined
  - htcondor_key is defined

- name: create condor certificate directories
  file:
    dest: /etc/grid-security/condor/worker
    state: directory
    owner: condor
    group: condor
    mode: 0755
  when:
  - htcondor_cert is defined
  - htcondor_worker_cert is defined

- name: install condor certificate file
  copy:
    src: "{{ htcondor_cert }}"
    dest: /etc/grid-security/condor/condorcert.pem
    owner: condor
    group: condor
    mode: 0644
  when:
  - htcondor_cert is defined
  - htcondor_key is defined
  - htcondor_worker_cert is defined
  - htcondor_worker_key is defined

- name: install condor private key file
  copy:
    src: "{{ htcondor_key }}"
    dest: /etc/grid-security/condor/condorkey.pem
    owner: condor
    group: condor
    mode: 0400
  when:
  - htcondor_cert is defined
  - htcondor_key is defined
  - htcondor_worker_cert is defined
  - htcondor_worker_key is defined

- name: install condorworker certificate file
  copy:
    src: "{{ htcondor_worker_cert }}"
    dest: /etc/grid-security/condor/worker/condorworkercert.pem
    owner: condor
    group: condor
    mode: 0644
  when:
  - htcondor_cert is defined
  - htcondor_key is defined
  - htcondor_worker_cert is defined
  - htcondor_worker_key is defined

- name: install condorworker private key file
  copy:
    src: "{{ htcondor_worker_key }}"
    dest: /etc/grid-security/condor/worker/condorworkerkey.pem
    owner: condor
    group: condor
    mode: 0400
  when:
  - htcondor_cert is defined
  - htcondor_key is defined
  - htcondor_worker_cert is defined
  - htcondor_worker_key is defined

- name: install condor admin proxy utility
  template:
    src: usr_local_sbin_create_condor_admin_proxy.j2
    dest: /usr/local/sbin/create_condor_admin_proxy
    owner: root
    group: root
    mode: 0700
  when:
  - htcondor_cert is defined
  - htcondor_key is defined

- name: install condor proxy crontab
  copy:
    src: etc_cron.d_create_condor_proxies
    dest: /etc/cron.d/create_condor_proxies
    owner: root
    group: root
    mode: 0700
  when:
  - htcondor_cert is defined
  - htcondor_key is defined

- name: create an admin proxy certificate
  command: /usr/local/sbin/create_condor_admin_proxy
  args:
    creates: /tmp/x509up_u0
  when:
  - htcondor_cert is defined
  - htcondor_key is defined

- name: ensure HTCondor is running
  service:
    name: condor
    enabled: yes
    state: started
  ignore_errors: yes
  when:
  - container is defined
  - container == True

- meta: flush_handlers
